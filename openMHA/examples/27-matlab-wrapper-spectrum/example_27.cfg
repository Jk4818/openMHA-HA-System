# This file is part of the HörTech Open Master Hearing Aid (openMHA)
# Copyright © 2021 HörTech gGmbH
#
# openMHA is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# openMHA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License, version 3 for more details.
#
# You should have received a copy of the GNU Affero General Public License,
# version 3 along with openMHA.  If not, see <http://www.gnu.org/licenses/>.

# We have to tell the MHA how many audio channels to process.
# The "nchannels_in" variable accepts positive integers.
nchannels_in = 1
# The number of output channels is auto-deduced by the MHA.

# When we perform real-time signal processing, we process the signal
# in small chunks of data.
# The setting "fragsize" tells the MHA how many audio samples per channel
# are to be processed in each chunk.
fragsize=64

# MHA processes discrete-time digital audio signals with a fixed
# sampling rate.  The sampling rate tells MHA how many samples per
# second have been digitized in each audio channel.
srate = 16000

# In this example, we load the IO library that reads from and writes to sound files.
iolib = MHAIOFile

# This variable is used to select the input sound file.  The file name
# of the sound file to use as the input sound signal to the MHA is
# written to this variable.
io.in = example_27.wav

# Note that to ensure that the sound file was properly closed, the MHA
# should be told to exit (cmd=quit).
io.out = out.wav

# The MHA framework can load a single MHA plugin to process the data.
# We tell the MHA which plugin to load with the "mhalib" variable.
# Usually MHA configurations consist of more than just one plugin.
# MHA provides structuring plugins that can themselves load other
# plugins for this purpose.
mhalib = overlapadd

# FFT configuration
mha.fftlen=512
mha.wnd.len=128

# The overlapadd plugin again loads one plugin that processes the
# signal in the spectral domain.  The plugin loaded here will receive
# the STFT signal and produce a possibly modified version of the STFT
# signal, which is then subjected to inverse FFT transform by the
# overlapadd plugin and finally the overlap-add operation is performed
# to produce the time-domain output signal. We load the matlab_wrapper
# plugin to perform the spectral processing
mha.plugin_name=matlab_wrapper


# Tell the matlab_wrapper plugin to look for the user library
# example_25 (without suffix!). The plugin then loads the library
# and tries to resolve the callback functions and parses the user configuration
# defined in init()
mha.matlab_wrapper.library_name=example_27

#Set the filter coefficients. We use a Gaussian curce with mu=14, sigma=4

mha.matlab_wrapper.filter=[...
0.178 0.230 0.291 0.360 0.438 0.520 0.607 0.693 0.775 0.849 ...
0.912 0.960 0.990 1.000 0.990 0.960 0.912 0.849 0.775 0.693 ...
0.607 0.520 0.438 0.360 0.291 0.230 0.178 0.135 0.101 0.073 ...
0.052 0.037 0.025 0.017 0.011 0.007 0.005 0.003 0.002 0.001 ...
0.001 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ...
0.000 0.000 0.000 0.000 0.000 0.000 0.000]

#This configuration file can be run with the following command
#mha ?read:example_27.cfg cmd=start cmd=quit
